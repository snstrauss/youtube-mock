{"version":3,"sources":["contexts/songs.context.js","components/search/search.jsx","components/song-entry/song-entry.jsx","components/search-results/search-results.jsx","services/song.service.js","components/song-view/song-view.jsx","components/youtube-search/youtube-search.js","index.js"],"names":["SongsContext","React","createContext","Search","respond","useState","searchValue","setSearchValue","flatSongs","useContext","doSearch","ev","preventDefault","foundSongs","filter","song","name","toLowerCase","includes","onSubmit","className","type","placeholder","onChange","target","value","onClick","SongEntry","selectSong","isRelated","split","artist","title","styleVariables","style","src","views","SearchResults","results","songsToShow","singleSongs","useMemo","singleSongsObj","reduce","acc","curr","link","Object","values","map","i","key","getSongId","match","SongView","songId","width","height","frameborder","allow","allowfullscreen","relatedPlaylists","songsHistory","YoutubeSearch","allSongs","setSongs","selectedSong","setSelectedSong","setFoundSongs","goBack","nextSong","pop","push","window","history","pushState","useEffect","fetch","then","res","json","songs","getFlatSongs","songsArr","forEach","relatedSongs","concat","onpopstate","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e90b3772.chunk.js","sourcesContent":["import React from 'react';\n\nconst SongsContext = React.createContext();\n\nexport default SongsContext;","import React, { useState, useMemo, useContext } from 'react';\nimport SongsContext from '../../contexts/songs.context';\nimport './search.css';\n\nexport default function Search({ respond }){\n\n    const [searchValue, setSearchValue] = useState();\n\n    const { flatSongs } = useContext(SongsContext);\n\n    function doSearch(ev){\n        ev.preventDefault();\n\n        const foundSongs = flatSongs.filter(song => song.name.toLowerCase().includes(searchValue));\n\n        respond(foundSongs);\n    }\n\n    return (\n        <form onSubmit={(ev) => doSearch(ev)} className=\"search-container\">\n            <input type=\"text\" placeholder=\"search for videos\" onChange={(ev) => setSearchValue(ev.target.value)}/>\n            <button onClick={doSearch}>GO</button>\n        </form>\n    );\n}","import React from 'react';\nimport './song-entry.css';\n\nexport default function SongEntry({ song, selectSong, isRelated }){\n\n    const [artist, title] = song.name.split(' - ');\n\n    const styleVariables = {\n        '--multi': isRelated ? 0.5 : 1\n    };\n\n    return (\n        <div onClick={() => selectSong(song)} className=\"song-entry\" style={styleVariables}>\n            <img src=\"http://placekitten.com/300/200\"></img>\n            <section className=\"data\">\n                <span className=\"name\">{title}</span>\n                <div className=\"artist-container\">\n                    <span className=\"artist\">{artist}</span>\n                    {\n                        !isRelated &&\n                        <span className=\"views\">{song.views} views</span>\n                    }\n                </div>\n                {\n                    !isRelated &&\n                    <span className=\"description\">\n                        description...........\n                    </span>\n                }\n            </section>\n        </div>\n    )\n}","import React, { useContext, useMemo } from 'react';\nimport './search-results.css';\nimport SongsContext from '../../contexts/songs.context';\nimport SongEntry from '../song-entry/song-entry';\n\nexport default function SearchResults({ results, selectSong }){\n\n\n    const { flatSongs } = useContext(SongsContext);\n\n    const songsToShow = results ? results : flatSongs;\n\n    const singleSongs = useMemo(() => {\n        const singleSongsObj = songsToShow.reduce((acc, curr) => {\n            acc[curr.link] = curr;\n            return acc;\n        }, {})\n\n\n        return Object.values(singleSongsObj)\n    }, [songsToShow]);\n\n    return (\n        <div className=\"search-results\">\n            {\n                singleSongs.map((song, i) => (\n                    <SongEntry song={song} key={song.link} selectSong={selectSong}/>\n                ))\n            }\n        </div>\n    )\n}","export function separateTitle(song){\n    return song.name.split(' - ');\n}\n\nexport function getSongId(song){\n    return song.link.match(/watch\\?v=(.+)/)[1];\n}\n\nexport default {\n    separateTitle,\n    getSongId\n}","import React from 'react';\nimport './song-view.css';\nimport SongEntry from '../song-entry/song-entry';\nimport { separateTitle, getSongId } from '../../services/song.service';\n\n\n\nexport default function SongView({ song, selectSong }){\n\n    const songId = getSongId(song);\n    // const [artist, title] = separateTitle(song);\n\n    return (\n        <div className=\"song-view\">\n            <div className=\"song-player\">\n                <h1>{song.name}</h1>\n                <iframe width=\"1020\" height=\"630\" src={`https://www.youtube.com/embed/${songId}`}\n                        frameborder=\"0\"\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                        allowfullscreen>\n                </iframe>\n            </div>\n            <aside className=\"related-songs\">\n                {\n                    song.relatedPlaylists\n                    ?\n                    song.relatedPlaylists.map((song) => (\n                        <SongEntry song={song} key={song.link} selectSong={selectSong} isRelated/>\n                    ))\n                    :\n                    null\n                }\n            </aside>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Search from '../search/search';\nimport './youtube-search.css';\nimport SongsContext from '../../contexts/songs.context';\nimport SearchResults from '../search-results/search-results';\nimport SongView from '../song-view/song-view';\nimport { getSongId } from '../../services/song.service';\n\nconst songsHistory = [];\nexport default function YoutubeSearch(){\n\n    const [allSongs, setSongs] = useState();\n    const [selectedSong, setSelectedSong] = useState();\n    const [foundSongs, setFoundSongs] = useState();\n\n    useEffect(() => {\n        fetch('songs.json')\n        .then(res => res.json())\n        .then((songs) => {\n            const flatSongs = getFlatSongs(songs);\n\n            function getFlatSongs(songsArr){\n\n                let songs = [];\n\n                songsArr.forEach((song) => {\n                    songs.push(song);\n\n                    if(song.relatedPlaylists){\n                        const relatedSongs = getFlatSongs(song.relatedPlaylists);\n                        songs = songs.concat(relatedSongs);\n                    }\n                });\n\n                return songs;\n            }\n\n            window.onpopstate = goBack;\n\n            setSongs({\n                songs,\n                flatSongs\n            });\n\n            return () => {\n                window.onpopstate = null;\n            }\n        })\n    }, [])\n\n    function goBack(){\n        const nextSong = songsHistory.pop();\n        setSelectedSong(nextSong);\n    }\n\n    function gotSongs(songs){\n        setFoundSongs(songs);\n    }\n\n    function selectSong(song){\n        if(selectedSong){\n            songsHistory.push(selectedSong);\n        }\n\n        window.history.pushState(getSongId(song), song.name);\n        setSelectedSong(song);\n    }\n\n    return (\n        <div className=\"app-container\">\n            {\n                allSongs\n                ?\n                <SongsContext.Provider value={allSongs}>\n                    <header className=\"header\">\n                        <Search respond={gotSongs}/>\n                    </header>\n                    <main>\n                        {\n                            selectedSong\n                            ?\n                            <SongView song={selectedSong} selectSong={selectSong} />\n                            :\n                            <SearchResults results={foundSongs} selectSong={selectSong} />\n                        }\n                    </main>\n                </SongsContext.Provider>\n                :\n                null\n            }\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport YoutubeSearch from './components/youtube-search/youtube-search';\n\nReactDOM.render(<YoutubeSearch/>, document.getElementById('root'))\n"],"sourceRoot":""}